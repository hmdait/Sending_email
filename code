import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import sys
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
from email.header import Header
from email.utils import formataddr

EMAIL_HTML_TEMPLATE = """<html>
                  <head>
                  </head>
                  <body>
                    <p style ="margin: 5px 0;line-height: 26px;">
                    Hello {},<br>
                    <br>
                    "" Body Message ""
                    <br>
                    Best regards.<br>
                    
                    <br>
                    </p>
                  </body>
                </html>
                """


class EmailSenderClass:
    def __init__(self):
        self.logaddr = "******@gmail.com"
        self.fromaddr = "******@gmail.com"  # alias
        self.password = "******"  # the password is generated by gmail you must add an application in your gmail manager 

    def sendMessageViaServer(self, toaddr, msg):
        # Send the message via SSL/TLS encrypted connection
        server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
        server.login(self.logaddr, self.password)
        server.sendmail(self.fromaddr, toaddr, msg.as_string())
        server.quit()

    def sendHtmlEmailTo(self, destName, cc, banc, Alertevent, pc=None, occ=0):
        # Message setup
        msg = MIMEMultipart()
        destinationAddress = "*******@gmail.com"
        msg['From'] = "ARGOS<" + self.fromaddr + ">"
        msg['To'] = destinationAddress
        msg['Subject'] = "Alerte sur les bancs d'essai"
        msg['CC'] = ",".join(cc)

        txt = EMAIL_HTML_TEMPLATE
        txt = txt.format(destName)

        # Add text to message
        msg.attach(MIMEText(txt, 'html'))
        if pc != None:
            for p in pc:
                nom_fichier = p
                piece = open(p, "rb")
                part = MIMEBase('application', 'octet-stream')
                part.set_payload((piece).read())
                encoders.encode_base64(part)
                part.add_header('Content-Disposition', "piece; filename= %s" % nom_fichier[occ:])
                msg.attach(part)
        self.sendMessageViaServer(destinationAddress, msg)


n = EmailSenderClass()
n.sendHtmlEmailTo("Jon")
